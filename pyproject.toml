[build-system]
requires = [
    "setuptools>=45",
    "setuptools_scm[toml]>=6.0",
]
build-backend = "setuptools.build_meta"

[project]
name = "rpmget"
description = "A workflow helper to manage random sets of RPM package deps."
dynamic = ["version"]
readme = "README.rst"
license = "MIT"

authors = [
    {name = "Stephen Arnold"},
    {email = "nerdboy@gentoo.org"},
]

classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Framework :: tox",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Operating System :: POSIX :: Linux",
    "Operating System :: Unix",
    "Programming Language :: Python :: 3",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Software Development",
    "Topic :: Software Development :: Testing",
    "Topic :: Utilities",
]

dependencies = [
    "cerberus>=1.3.4",
    "httpx>=0.23.0",
    "munch>=2.5.0",
    "tqdm>=4.59.0",
    "platformdirs>=2.5.4",
]

requires-python = ">=3.8"

[project.optional-dependencies]
dev = [
    "doorstop",
    "flake8",
    "isort",
    "mypy>=0.990",
    "black>=22.3.0",
    "pylint>=3.1.0",
]
cov = [
    "covdefaults",
    "coverage[toml]",
]
doc = [
    "sphinx",
    "sphinxcontrib.apidoc",
    "sphinx_git",
    "myst-parser",
    "sphinxcontrib.mermaid",
    "sphinx_rtd_theme<3.0",
]
test = [
    "pytest",
    "pytest-cov",
    "pytest-dependency",
]

[project.urls]
Homepage = "https://github.com/sarnold/rpmget"
Documentation = "https://sarnold.github.io/rpmget/"
Repository = "https://github.com/sarnold/rpmget.git"
Issues = "https://github.com/sarnold/rpmget/issues"
Changelog = "https://github.com/sarnold/rpmget/blob/main/CHANGELOG.rst"

[project.scripts]
rpmget = "rpmget.rpmget:main"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools_scm]
version_scheme = "post-release"

[tool.pytest.ini_options]
minversion = "6.0"
testpaths = ["tests",]
log_cli =  false
doctest_optionflags = ["ELLIPSIS", "NORMALIZE_WHITESPACE",]
addopts = "--strict-markers"
markers = [
    "network: marks tests as network (deselect with '-m \"not network\"')",
    "serial",
]
filterwarnings = [
    "ignore:currentThread:DeprecationWarning",
    "ignore:co_lnotab:DeprecationWarning",
]

[tool.coverage.run]
branch = true
source_pkgs = ["src/rpmget"]
omit = [
    "setup.py",
    "scripts",
    "docs",
    ".tox",
]

[tool.coverage.paths]
source = ["src"]

[tool.coverage.report]
fail_under = 75
show_missing = true
ignore_errors = true
exclude_lines = [
    "pragma: no cover",
    "raise NotImplementedError",
    "raise AssertionError",
    "if typing.TYPE_CHECKING:",
    "if TYPE_CHECKING:",
]

[tool.black]
line-length = 90
skip-string-normalization = true
include = '\.py$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | build
  | docs
  | dist
  | edm1-captures
  | tests
)/
'''

[tool.pycln]
all = true

[tool.isort]
line_length = 72
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.bandit]
exclude_dirs = ["docs"]
skips = ["B603", "B404"]

[tool.mypy]
exclude =  [".tox"]
